---
- include: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'

- include: setup-Debian.yml
  when: ansible_os_family == 'Debian'

# http://docs.ansible.com/ansible/package_module.html
# add force=yes if need to downgrade
- name: Install Kibana.
  package:
    name: kibana={{ kibana_version }}
    state: present
    use: apt

# Test if x-pack is installed in kibana
- name: Check if Kibana has x-pack installed
  shell: "{{kibana_home}}/bin/kibana-plugin list | grep x-pack"
  register: x_pack_installed
  changed_when: False
  failed_when: "'ERROR' in x_pack_installed.stdout"
  check_mode: no
  ignore_errors: yes
  environment:
    CONF_DIR: "{{ conf_dir }}"
    ES_INCLUDE: "{{ instance_default_file }}"

# Remove X-Pack if installed
- name: Remove x-pack plugin
  command: "{{kibana_home}}/bin/kibana-plugin remove x-pack"
  register: xpack_state
  failed_when: "'ERROR' in xpack_state.stdout"
  changed_when: xpack_state.rc == 0
  when: x_pack_installed.rc == 0
  environment:
    CONF_DIR: "{{ conf_dir }}"
    ES_INCLUDE: "{{ instance_default_file }}"

# Install plugin if not installed, or the es version has changed (so removed above), and its been requested
- name: Install x-pack plugin in kibana
  command: >
    {{kibana_home}}/bin/kibana-plugin install --silent x-pack
  register: xpack_state
  failed_when: "'ERROR' in xpack_state.stdout"
  changed_when: xpack_state.rc == 0
  when: x_pack_installed.rc == 1
  environment:
    CONF_DIR: "{{ conf_dir }}"
    ES_INCLUDE: "{{ instance_default_file }}"

- name: Ensure Kibana is started and enabled at boot.
  service:
    name: kibana
    state: started
    enabled: yes

- name: Copy Kibana configuration.
  template:
    src: kibana.yml.j2
    dest: "/etc/kibana/kibana.yml"
    owner: root
    group: root
    mode: 0644
  notify: restart kibana
